Dockerhub

Dockerfile
	-> als erstes muss FROM steht
	-> OS / Image für die Grundlage
	-> ex: FROM debian:bookworm (version mit angeben?)
	-> is allen drei images das gleiche nehmen
	-> debian und nicht alpine wegen cmds

	-> aus Dockerfile macht man image und dadurch kann man container starten
	-> engine installieren

	beachten:
		EXPOSE <port>
			-> bsp. EXPOSE 8080
			-> stellt den port intern zur verfügung
			-> wenn man das über Docker Compose macht muss man den EXPOSE nicht angeben
		COPY <filesrc> <filedst>
			-> kopiert den die source file in den container mit dem namen filedst

cmds
	-> docker ps: 
		-> welcher container läuft
	-> docker ps -a : 
		-> welcher container ist auf der Machine
	-> docker build .
		-> aus der file wird ein img erstellt
	-> docker build . -t testimage
		-> name ist testimage
	-> docker image ls
		->
	-> docker run <name>
		-> startet container
	-> docker rm
		-> container entfernen
	-> docker run -it <name>
		-> in container drin
	-> docker run -p 8080:8080 -it <name>
		-> interne port auf den externen port
		-> erste port hostmachine
		-> zweite port container
	-> docker run -it -v <name> /absolutepath
		-> macht eine Directory in dem angegebenen pfad verfügbar
		-> volume
			-> alles was über volumes zur verfügung gestellt wird ist persistent
			-> wenn beendet wird bleibt es da

container when sie starten müssen mariadb, ngx und word press installieren

alles was isntalliert werden soll muss in docker file passieren, sonst verschwindet es
-> apt-get update && apt-get upgrade -y 
	update package manager
-> apt-get install -y <service>

docker-Compose
	services:
		<name>:
		image:
		build:
		ports:
			- 8080:80
		volumes:
			-.:.
		networks:
			- <networkname>
			-> für die container Kommunikation untereinander
		restart:
		depends_on:
			-> nur der container nicht der service
			-> service muss über installations script abgefangen werden

		
	-> kann mehrere service builden
		-> ports müssen unterschiedlich sein für services

	cmds:
		docker compose build
			-> sucht die compose file im directory
			-> startet container mit den ganzen befehlen
		docker compose up
		docker compose down
		
		docker exec -it <name> bash

installation von services
	mariadb
		-> bind address ändern 0.0.0.0
		-> socket und pid angeben

start script
